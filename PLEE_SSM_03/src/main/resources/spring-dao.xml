<?xml version="1.0" encoding="UTF8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--1.关联数据库配置文件-->
    <context:property-placeholder location="classpath:database.properties"/>

    <!--2.连接池-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--<property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>

        <property name="initialSize" value="${initialSize}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="maxWait" value="${maxWait}"/>-->

        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <!--<property name="url" value="jdbc:mysql://10.227.6.242:3306/test?useSSL=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC"/>-->
        <property name="url" value="jdbc:mysql://10.227.6.242:3306/plee_platform?useSSL=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC"/>
        <property name="username" value="Liang.Dongyu"/>
        <property name="password" value="faw123"/>

        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="1000"/>
        <property name="maxWait" value="600000"/>

    </bean>
    <!--3. sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--绑定Mybatis（也可不加，但推荐）-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--
        <property name="mapperLocations" value="classpath:dao/UserMapper.xml"/>
-->
    </bean>
    <!--SqlSessionTemplate就是sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <!--因为源码中没有set方法，所以只能用构造器constructor注入sqlSessionFactory,property是不行的-->
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!--配置dao接口扫描包，动态的实现了dao接口可以注入到Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--将上方的sqlSessionFactory注入-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--要扫描的dao包,在dao包下就不用写Impl实现类了-->
        <property name="basePackage" value="dao"/>

    </bean>


</beans>